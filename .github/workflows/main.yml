# name: Gradle Build with SBOM & License Reports

# on:
#   push:
#     branches: [ "master" ]

# jobs:
#   build:
#     runs-on: ubuntu-22.04

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: temurin
#           java-version: 17

#       - name: Set up Gradle (uses wrapper + caching)
#         uses: gradle/actions/setup-gradle@v3

#       - name: Show Gradle and Java versions
#         run: |
#           ./gradlew -v
#           java -version

#       - name: Dependency Updates and License Reports
#         run: |
#           # If dependency locking is enabled in your project, disable it for this check
#           # export GRADLE_OPTS="$GRADLE_OPTS -Dorg.gradle.dependency.locking=false"

#           ./gradlew dependencyUpdates --refresh-dependencies --info -Drevision=release
#           ./gradlew generateLicenseReport

#       - name: Format outdated dependencies (optional)
#         run: |
#           if [ -f "./get-details-1.sh" ]; then
#             bash ./get-details-1.sh || true
#           else
#             echo "Formatter script not present; skipping."
#           fi

#       - name: List generated reports
#         run: |
#           echo "=== Dependency Updates ==="
#           ls -l dependency-updates || echo "No dependency-updates dir"
#           echo "=== License Reports ==="
#           ls -l build/reports/dependency-license || echo "No license reports"

#       - name: Upload Outdated Dependencies (raw)
#         if: success() || failure()
#         uses: actions/upload-artifact@v4
#         with:
#           name: outdated-dependencies-raw
#           path: dependency-updates/report.txt
#           if-no-files-found: warn

#       - name: Upload Outdated Dependencies (formatted)
#         if: success() || failure()
#         uses: actions/upload-artifact@v4
#         with:
#           name: outdated-dependencies-formatted
#           path: outdated_dependencies_report.txt
#           if-no-files-found: ignore

#       - name: Upload License Reports
#         if: success() || failure()
#         uses: actions/upload-artifact@v4
#         with:
#           name: license-reports
#           path: build/reports/dependency-license/**
#           if-no-files-found: warn

#       - name: Upload SBOM
#         if: success() || failure()
#         uses: actions/upload-artifact@v4
#         with:
#           name: sbom-result
#           path: sbom-result.txt
#           if-no-files-found: warn

#       - name: Upload Trivy Vulnerabilities
#         if: success() || failure()
#         uses: actions/upload-artifact@v4
#         with:
#           name: trivy-vulnerabilities
#           path: trivy-vulnerabilities.txt
#           if-no-files-found: warn
            
# # name: Gradle Build with SBOM & License Reports

# # on:
# #   push:
# #     branches: [ "master" ]

# # jobs:
# #   build:
# #     runs-on: ubuntu-22.04

# #     steps:
# #       - name: Checkout
# #         uses: actions/checkout@v4

# #       - name: Set up JDK 17
# #         uses: actions/setup-java@v4
# #         with:
# #           distribution: temurin
# #           java-version: 17

# #       - name: Set up Gradle (uses wrapper + caching)
# #         uses: gradle/actions/setup-gradle@v3

# #       - name: Show Gradle and Java versions
# #         run: |
# #           ./gradlew -v
# #           java -version

# #       - name: Dependency Updates and License Reports
# #         run: |
# #           # If dependency locking is enabled in your project, disable it for this check
# #           # export GRADLE_OPTS="$GRADLE_OPTS -Dorg.gradle.dependency.locking=false"
# #           ./gradlew dependencyUpdates --refresh-dependencies --info -Drevision=release
# #           ./gradlew generateLicenseReport

# #       - name: Format outdated dependencies (optional)
# #         run: |
# #           if [ -f "./get-details-1.sh" ]; then
# #             bash ./get-details-1.sh || true
# #           else
# #             echo "Formatter script not present; skipping."
# #           fi

# #       - name: Generate SBOM (txt)
# #         uses: anchore/sbom-action@v0
# #         with:
# #           path: .
# #           format: table
# #           output-file: sbom-result.txt

# #       - name: Run Trivy filesystem scan (txt)
# #         uses: aquasecurity/trivy-action@0.28.0
# #         with:
# #           scan-type: fs
# #           scan-ref: .
# #           format: table
# #           output: trivy-vulnerabilities.txt
# #           ignore-unfixed: true
# #           severity: HIGH,CRITICAL

# #       - name: List generated reports
# #         run: |
# #           echo "=== Dependency Updates ==="
# #           ls -l dependency-updates || echo "No dependency-updates dir"
# #           echo "=== License Reports ==="
# #           ls -l build/reports/dependency-license || echo "No license reports"
# #           echo "=== SBOM ==="
# #           ls -l sbom-result.txt || echo "No SBOM"
# #           echo "=== Trivy ==="
# #           ls -l trivy-vulnerabilities.txt || echo "No Trivy report"

# #       - name: Upload Outdated Dependencies (raw)
# #         if: success() || failure()
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: outdated-dependencies-raw
# #           path: dependency-updates/report.txt
# #           if-no-files-found: warn

# #       - name: Upload Outdated Dependencies (formatted)
# #         if: success() || failure()
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: outdated-dependencies-formatted
# #           path: outdated_dependencies_report.txt
# #           if-no-files-found: ignore

# #       - name: Upload License Reports
# #         if: success() || failure()
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: license-reports
# #           path: build/reports/dependency-license/**
# #           if-no-files-found: warn

# #       - name: Upload SBOM
# #         if: success() || failure()
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: sbom-result
# #           path: sbom-result.txt
# #           if-no-files-found: warn

# #       - name: Upload Trivy Vulnerabilities
# #         if: success() || failure()
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: trivy-vulnerabilities
# #           path: trivy-vulnerabilities.txt
# #           if-no-files-found: warn

name: Gradle Build with SBOM & License Reports

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Gradle (uses wrapper + caching)
        uses: gradle/actions/setup-gradle@v3

      - name: Show Gradle and Java versions
        run: |
          ./gradlew -v
          java -version

      - name: Generate dependency updates and license reports
        run: |
          ./gradlew dependencyUpdates --refresh-dependencies -Drevision=release
          ./gradlew generateLicenseReport

      - name: Make scripts executable
        run: |
          chmod +x ./get-details-1.sh || true
          chmod +x ./get-details-2.sh || true
          chmod +x ./trivy.sh || true

      - name: Run get-details-1.sh and show output
        run: |
          bash ./get-details-1.sh || true
          echo "After get-details-1.sh:"
          ls -l
          cat outdated_dependencies_report.txt || echo "outdated_dependencies_report.txt not found"

      - name: Run get-details-2.sh and show output
        run: |
          bash ./get-details-2.sh || true
          echo "After get-details-2.sh:"
          ls -l

      - name: Install PowerShell and run merge-details.ps1
        run: |
          wget https://github.com/PowerShell/PowerShell/releases/download/v7.5.0/powershell_7.5.0-1.deb_amd64.deb
          sudo dpkg -i powershell_7.5.0-1.deb_amd64.deb || true
          sudo apt-get update
          sudo apt-get -f install -y
          pwsh --version
          rm -f powershell_7.5.0-1.deb_amd64.deb
          pwsh -File ./merge-details.ps1 || true
          echo "After merge-details.ps1:"
          ls -l
          cat sbom-result.txt || echo "sbom-result.txt not found"

      - name: Run trivy.sh and show output
        run: |
          bash ./trivy.sh || true
          echo "After trivy.sh:"
          ls -l
          cat trivy-vulnerabilities.txt || echo "trivy-vulnerabilities.txt not found"

      - name: List generated reports
        run: |
          echo "=== Dependency Updates ==="
          ls -l dependency-updates || echo "No dependency-updates dir"
          echo "=== License Reports ==="
          ls -l build/reports/dependency-license || echo "No license reports"
          echo "=== SBOM ==="
          ls -l sbom-result.txt || echo "No SBOM"
          echo "=== Trivy ==="
          ls -l trivy-vulnerabilities.txt || echo "No Trivy report"

      - name: Upload Outdated Dependencies (raw)
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: outdated-dependencies-raw
          path: dependency-updates/report.txt
          if-no-files-found: warn

      - name: Upload Outdated Dependencies (formatted)
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: outdated-dependencies-formatted
          path: outdated_dependencies_report.txt
          if-no-files-found: ignore

      - name: Upload License Reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: build/reports/dependency-license/**
          if-no-files-found: warn

      - name: Upload SBOM
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: sbom-result
          path: sbom-result.txt
          if-no-files-found: warn

      - name: Upload Trivy Vulnerabilities
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-vulnerabilities
          path: trivy-vulnerabilities.txt
          if-no-files-found: warn
